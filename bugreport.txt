
Loop Integer Overflow/Underflow Bug Detected at Line: 13
Solution: Careful when using uint within loop as could cause infinite loop check no
constant true condition can evaluate
Risk: High
Confidence: Low

Loop Integer Overflow/Underflow Bug Detected at Line: 14
Solution: Careful when using uint within loop as could cause infinite loop check no
constant true condition can evaluate
Risk: High
Confidence: Low

Untrusted Function Bug Detected at Line: 46
Solution: Unknown trust, label function either trusted/untrusted
Risk: Medium
Confidence: Medium

Zero Address Check Bug Detected at Function Line: 46
Solution: Check address is not zero using require, address variable and checking
it is not equal to either 'address(0)', '0x0' or 'address(0x0)'
Risk: Low
Confidence: High

Reentracy Bug Detected in contract at line: 30
Solution: Use a blockreentracy contract lock mechanism so only a single contract
function is executed
Risk: Medium
Confidence: Medium

Total Bug Points: 23
Smart Contract Score: 100%
